"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/api/now-playing/route",{

/***/ "(rsc)/./app/api/now-playing/route.ts":
/*!**************************************!*\
  !*** ./app/api/now-playing/route.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   dynamic: () => (/* binding */ dynamic),\n/* harmony export */   revalidate: () => (/* binding */ revalidate),\n/* harmony export */   runtime: () => (/* binding */ runtime)\n/* harmony export */ });\nconst runtime = \"edge\";\nconst dynamic = \"force-dynamic\"; // always fetch fresh\nconst revalidate = 0;\n// CHECK AGAIN W CLOUDFARE\nconst clientId = process.env.SPOTIFY_CLIENT_ID;\nconst clientSecret = process.env.SPOTIFY_CLIENT_SECRET;\nconst refreshToken = process.env.SPOTIFY_REFRESH_TOKEN;\nasync function getAccessToken() {\n    const params = new URLSearchParams({\n        grant_type: \"refresh_token\",\n        refresh_token: refreshToken\n    });\n    const res = await fetch(\"https://accounts.spotify.com/api/token\", {\n        method: \"POST\",\n        headers: {\n            \"Authorization\": \"Basic \" + btoa(`${clientId}:${clientSecret}`),\n            \"Content-Type\": \"application/x-www-form-urlencoded\"\n        },\n        body: params.toString()\n    });\n    if (!res.ok) throw new Error(\"token refresh failed\");\n    return res.json();\n}\nasync function GET() {\n    try {\n        const { access_token } = await getAccessToken();\n        const playingRes = await fetch(\"https://api.spotify.com/v1/me/player/currently-playing\", {\n            headers: {\n                Authorization: `Bearer ${access_token}`\n            }\n        });\n        if (playingRes.status === 204 || playingRes.status === 202) {\n            // nothing is playing\n            return new Response(JSON.stringify({\n                playing: false\n            }), {\n                headers: {\n                    \"content-type\": \"application/json\"\n                }\n            });\n        }\n        if (!playingRes.ok) throw new Error(\"spotify now playing failed\");\n        const data = await playingRes.json();\n        const payload = {\n            playing: data?.is_playing ?? false,\n            progress_ms: data?.progress_ms ?? 0,\n            duration_ms: data?.item?.duration_ms ?? 0,\n            title: data?.item?.name ?? \"\",\n            artist: data?.item?.artists?.map((a)=>a.name).join(\", \") ?? \"\",\n            album: data?.item?.album?.name ?? \"\",\n            artwork: data?.item?.album?.images?.[1]?.url ?? \"\",\n            url: data?.item?.external_urls?.spotify ?? \"\"\n        };\n        return new Response(JSON.stringify(payload), {\n            headers: {\n                \"content-type\": \"application/json\",\n                // prevent caching\n                \"cache-control\": \"no-store, no-cache, must-revalidate\"\n            }\n        });\n    } catch (e) {\n        return new Response(JSON.stringify({\n            playing: false\n        }), {\n            headers: {\n                \"content-type\": \"application/json\"\n            },\n            status: 200\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvYXBpL25vdy1wbGF5aW5nL3JvdXRlLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBTyxNQUFNQSxVQUFVLE9BQU87QUFDdkIsTUFBTUMsVUFBVSxnQkFBZ0IsQ0FBRSxxQkFBcUI7QUFDdkQsTUFBTUMsYUFBYSxFQUFFO0FBRTVCLDBCQUEwQjtBQUMxQixNQUFNQyxXQUFXQyxRQUFRQyxHQUFHLENBQUNDLGlCQUFpQjtBQUM5QyxNQUFNQyxlQUFlSCxRQUFRQyxHQUFHLENBQUNHLHFCQUFxQjtBQUN0RCxNQUFNQyxlQUFlTCxRQUFRQyxHQUFHLENBQUNLLHFCQUFxQjtBQUV0RCxlQUFlQztJQUNiLE1BQU1DLFNBQVMsSUFBSUMsZ0JBQWdCO1FBQ2pDQyxZQUFZO1FBQ1pDLGVBQWVOO0lBQ2pCO0lBRUEsTUFBTU8sTUFBTSxNQUFNQyxNQUFNLDBDQUEwQztRQUNoRUMsUUFBUTtRQUNSQyxTQUFTO1lBQ1AsaUJBQWlCLFdBQVdDLEtBQUssQ0FBQyxFQUFFakIsU0FBUyxDQUFDLEVBQUVJLGFBQWEsQ0FBQztZQUM5RCxnQkFBZ0I7UUFDbEI7UUFDQWMsTUFBTVQsT0FBT1UsUUFBUTtJQUN2QjtJQUVBLElBQUksQ0FBQ04sSUFBSU8sRUFBRSxFQUFFLE1BQU0sSUFBSUMsTUFBTTtJQUM3QixPQUFPUixJQUFJUyxJQUFJO0FBQ2pCO0FBRU8sZUFBZUM7SUFDcEIsSUFBSTtRQUNGLE1BQU0sRUFBRUMsWUFBWSxFQUFFLEdBQUcsTUFBTWhCO1FBRS9CLE1BQU1pQixhQUFhLE1BQU1YLE1BQ3ZCLDBEQUNBO1lBQUVFLFNBQVM7Z0JBQUVVLGVBQWUsQ0FBQyxPQUFPLEVBQUVGLGFBQWEsQ0FBQztZQUFDO1FBQUU7UUFHekQsSUFBSUMsV0FBV0UsTUFBTSxLQUFLLE9BQU9GLFdBQVdFLE1BQU0sS0FBSyxLQUFLO1lBQzFELHFCQUFxQjtZQUNyQixPQUFPLElBQUlDLFNBQVNDLEtBQUtDLFNBQVMsQ0FBQztnQkFBRUMsU0FBUztZQUFNLElBQUk7Z0JBQ3REZixTQUFTO29CQUFFLGdCQUFnQjtnQkFBbUI7WUFDaEQ7UUFDRjtRQUVBLElBQUksQ0FBQ1MsV0FBV0wsRUFBRSxFQUFFLE1BQU0sSUFBSUMsTUFBTTtRQUVwQyxNQUFNVyxPQUFPLE1BQU1QLFdBQVdILElBQUk7UUFFbEMsTUFBTVcsVUFBVTtZQUNkRixTQUFTQyxNQUFNRSxjQUFjO1lBQzdCQyxhQUFhSCxNQUFNRyxlQUFlO1lBQ2xDQyxhQUFhSixNQUFNSyxNQUFNRCxlQUFlO1lBQ3hDRSxPQUFPTixNQUFNSyxNQUFNRSxRQUFRO1lBQzNCQyxRQUFRUixNQUFNSyxNQUFNSSxTQUFTQyxJQUFJLENBQUNDLElBQVdBLEVBQUVKLElBQUksRUFBRUssS0FBSyxTQUFTO1lBQ25FQyxPQUFPYixNQUFNSyxNQUFNUSxPQUFPTixRQUFRO1lBQ2xDTyxTQUFTZCxNQUFNSyxNQUFNUSxPQUFPRSxRQUFRLENBQUMsRUFBRSxFQUFFQyxPQUFPO1lBQ2hEQSxLQUFLaEIsTUFBTUssTUFBTVksZUFBZUMsV0FBVztRQUM3QztRQUVBLE9BQU8sSUFBSXRCLFNBQVNDLEtBQUtDLFNBQVMsQ0FBQ0csVUFBVTtZQUMzQ2pCLFNBQVM7Z0JBQ1AsZ0JBQWdCO2dCQUNoQixrQkFBa0I7Z0JBQ2xCLGlCQUFpQjtZQUNuQjtRQUNGO0lBQ0YsRUFBRSxPQUFPbUMsR0FBRztRQUNWLE9BQU8sSUFBSXZCLFNBQVNDLEtBQUtDLFNBQVMsQ0FBQztZQUFFQyxTQUFTO1FBQU0sSUFBSTtZQUN0RGYsU0FBUztnQkFBRSxnQkFBZ0I7WUFBbUI7WUFDOUNXLFFBQVE7UUFDVjtJQUNGO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vYXBwL2FwaS9ub3ctcGxheWluZy9yb3V0ZS50cz9jMjlkIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBydW50aW1lID0gJ2VkZ2UnOyBcbmV4cG9ydCBjb25zdCBkeW5hbWljID0gJ2ZvcmNlLWR5bmFtaWMnOyAgLy8gYWx3YXlzIGZldGNoIGZyZXNoXG5leHBvcnQgY29uc3QgcmV2YWxpZGF0ZSA9IDA7XG5cbi8vIENIRUNLIEFHQUlOIFcgQ0xPVURGQVJFXG5jb25zdCBjbGllbnRJZCA9IHByb2Nlc3MuZW52LlNQT1RJRllfQ0xJRU5UX0lEITtcbmNvbnN0IGNsaWVudFNlY3JldCA9IHByb2Nlc3MuZW52LlNQT1RJRllfQ0xJRU5UX1NFQ1JFVCE7XG5jb25zdCByZWZyZXNoVG9rZW4gPSBwcm9jZXNzLmVudi5TUE9USUZZX1JFRlJFU0hfVE9LRU4hO1xuXG5hc3luYyBmdW5jdGlvbiBnZXRBY2Nlc3NUb2tlbigpIHtcbiAgY29uc3QgcGFyYW1zID0gbmV3IFVSTFNlYXJjaFBhcmFtcyh7XG4gICAgZ3JhbnRfdHlwZTogJ3JlZnJlc2hfdG9rZW4nLFxuICAgIHJlZnJlc2hfdG9rZW46IHJlZnJlc2hUb2tlbixcbiAgfSk7XG5cbiAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goJ2h0dHBzOi8vYWNjb3VudHMuc3BvdGlmeS5jb20vYXBpL3Rva2VuJywge1xuICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgIGhlYWRlcnM6IHtcbiAgICAgICdBdXRob3JpemF0aW9uJzogJ0Jhc2ljICcgKyBidG9hKGAke2NsaWVudElkfToke2NsaWVudFNlY3JldH1gKSxcbiAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkJyxcbiAgICB9LFxuICAgIGJvZHk6IHBhcmFtcy50b1N0cmluZygpLFxuICB9KTtcblxuICBpZiAoIXJlcy5vaykgdGhyb3cgbmV3IEVycm9yKCd0b2tlbiByZWZyZXNoIGZhaWxlZCcpO1xuICByZXR1cm4gcmVzLmpzb24oKSBhcyBQcm9taXNlPHsgYWNjZXNzX3Rva2VuOiBzdHJpbmcgfT47XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBHRVQoKSB7XG4gIHRyeSB7XG4gICAgY29uc3QgeyBhY2Nlc3NfdG9rZW4gfSA9IGF3YWl0IGdldEFjY2Vzc1Rva2VuKCk7XG5cbiAgICBjb25zdCBwbGF5aW5nUmVzID0gYXdhaXQgZmV0Y2goXG4gICAgICAnaHR0cHM6Ly9hcGkuc3BvdGlmeS5jb20vdjEvbWUvcGxheWVyL2N1cnJlbnRseS1wbGF5aW5nJyxcbiAgICAgIHsgaGVhZGVyczogeyBBdXRob3JpemF0aW9uOiBgQmVhcmVyICR7YWNjZXNzX3Rva2VufWAgfSB9XG4gICAgKTtcblxuICAgIGlmIChwbGF5aW5nUmVzLnN0YXR1cyA9PT0gMjA0IHx8IHBsYXlpbmdSZXMuc3RhdHVzID09PSAyMDIpIHtcbiAgICAgIC8vIG5vdGhpbmcgaXMgcGxheWluZ1xuICAgICAgcmV0dXJuIG5ldyBSZXNwb25zZShKU09OLnN0cmluZ2lmeSh7IHBsYXlpbmc6IGZhbHNlIH0pLCB7XG4gICAgICAgIGhlYWRlcnM6IHsgJ2NvbnRlbnQtdHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyB9LFxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaWYgKCFwbGF5aW5nUmVzLm9rKSB0aHJvdyBuZXcgRXJyb3IoJ3Nwb3RpZnkgbm93IHBsYXlpbmcgZmFpbGVkJyk7XG5cbiAgICBjb25zdCBkYXRhID0gYXdhaXQgcGxheWluZ1Jlcy5qc29uKCk7XG5cbiAgICBjb25zdCBwYXlsb2FkID0ge1xuICAgICAgcGxheWluZzogZGF0YT8uaXNfcGxheWluZyA/PyBmYWxzZSxcbiAgICAgIHByb2dyZXNzX21zOiBkYXRhPy5wcm9ncmVzc19tcyA/PyAwLFxuICAgICAgZHVyYXRpb25fbXM6IGRhdGE/Lml0ZW0/LmR1cmF0aW9uX21zID8/IDAsXG4gICAgICB0aXRsZTogZGF0YT8uaXRlbT8ubmFtZSA/PyAnJyxcbiAgICAgIGFydGlzdDogZGF0YT8uaXRlbT8uYXJ0aXN0cz8ubWFwKChhOiBhbnkpID0+IGEubmFtZSkuam9pbignLCAnKSA/PyAnJyxcbiAgICAgIGFsYnVtOiBkYXRhPy5pdGVtPy5hbGJ1bT8ubmFtZSA/PyAnJyxcbiAgICAgIGFydHdvcms6IGRhdGE/Lml0ZW0/LmFsYnVtPy5pbWFnZXM/LlsxXT8udXJsID8/ICcnLFxuICAgICAgdXJsOiBkYXRhPy5pdGVtPy5leHRlcm5hbF91cmxzPy5zcG90aWZ5ID8/ICcnLFxuICAgIH07XG5cbiAgICByZXR1cm4gbmV3IFJlc3BvbnNlKEpTT04uc3RyaW5naWZ5KHBheWxvYWQpLCB7XG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgICdjb250ZW50LXR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXG4gICAgICAgIC8vIHByZXZlbnQgY2FjaGluZ1xuICAgICAgICAnY2FjaGUtY29udHJvbCc6ICduby1zdG9yZSwgbm8tY2FjaGUsIG11c3QtcmV2YWxpZGF0ZScsXG4gICAgICB9LFxuICAgIH0pO1xuICB9IGNhdGNoIChlKSB7XG4gICAgcmV0dXJuIG5ldyBSZXNwb25zZShKU09OLnN0cmluZ2lmeSh7IHBsYXlpbmc6IGZhbHNlIH0pLCB7XG4gICAgICBoZWFkZXJzOiB7ICdjb250ZW50LXR5cGUnOiAnYXBwbGljYXRpb24vanNvbicgfSxcbiAgICAgIHN0YXR1czogMjAwLFxuICAgIH0pO1xuICB9XG59XG4iXSwibmFtZXMiOlsicnVudGltZSIsImR5bmFtaWMiLCJyZXZhbGlkYXRlIiwiY2xpZW50SWQiLCJwcm9jZXNzIiwiZW52IiwiU1BPVElGWV9DTElFTlRfSUQiLCJjbGllbnRTZWNyZXQiLCJTUE9USUZZX0NMSUVOVF9TRUNSRVQiLCJyZWZyZXNoVG9rZW4iLCJTUE9USUZZX1JFRlJFU0hfVE9LRU4iLCJnZXRBY2Nlc3NUb2tlbiIsInBhcmFtcyIsIlVSTFNlYXJjaFBhcmFtcyIsImdyYW50X3R5cGUiLCJyZWZyZXNoX3Rva2VuIiwicmVzIiwiZmV0Y2giLCJtZXRob2QiLCJoZWFkZXJzIiwiYnRvYSIsImJvZHkiLCJ0b1N0cmluZyIsIm9rIiwiRXJyb3IiLCJqc29uIiwiR0VUIiwiYWNjZXNzX3Rva2VuIiwicGxheWluZ1JlcyIsIkF1dGhvcml6YXRpb24iLCJzdGF0dXMiLCJSZXNwb25zZSIsIkpTT04iLCJzdHJpbmdpZnkiLCJwbGF5aW5nIiwiZGF0YSIsInBheWxvYWQiLCJpc19wbGF5aW5nIiwicHJvZ3Jlc3NfbXMiLCJkdXJhdGlvbl9tcyIsIml0ZW0iLCJ0aXRsZSIsIm5hbWUiLCJhcnRpc3QiLCJhcnRpc3RzIiwibWFwIiwiYSIsImpvaW4iLCJhbGJ1bSIsImFydHdvcmsiLCJpbWFnZXMiLCJ1cmwiLCJleHRlcm5hbF91cmxzIiwic3BvdGlmeSIsImUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./app/api/now-playing/route.ts\n");

/***/ })

});