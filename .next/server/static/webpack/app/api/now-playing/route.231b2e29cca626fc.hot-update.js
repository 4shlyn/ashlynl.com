"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/api/now-playing/route",{

/***/ "(rsc)/./app/api/now-playing/route.ts":
/*!**************************************!*\
  !*** ./app/api/now-playing/route.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   dynamic: () => (/* binding */ dynamic),\n/* harmony export */   revalidate: () => (/* binding */ revalidate),\n/* harmony export */   runtime: () => (/* binding */ runtime)\n/* harmony export */ });\nconst runtime = \"edge\";\nconst dynamic = \"force-dynamic\"; // always fetch fresh\nconst revalidate = 0;\nconst clientId = process.env.SPOTIFY_CLIENT_ID;\nconst clientSecret = process.env.SPOTIFY_CLIENT_SECRET;\nconst refreshToken = process.env.SPOTIFY_REFRESH_TOKEN;\nasync function getAccessToken() {\n    const params = new URLSearchParams({\n        grant_type: \"refresh_token\",\n        refresh_token: refreshToken\n    });\n    const res = await fetch(\"https://accounts.spotify.com/api/token\", {\n        method: \"POST\",\n        headers: {\n            \"Authorization\": \"Basic \" + btoa(`${clientId}:${clientSecret}`),\n            \"Content-Type\": \"application/x-www-form-urlencoded\"\n        },\n        body: params.toString()\n    });\n    if (!res.ok) throw new Error(\"token refresh failed\");\n    return res.json();\n}\nasync function GET() {\n    try {\n        const { access_token } = await getAccessToken();\n        const playingRes = await fetch(\"https://api.spotify.com/v1/me/player/currently-playing\", {\n            headers: {\n                Authorization: `Bearer ${access_token}`\n            }\n        });\n        if (playingRes.status === 204 || playingRes.status === 202) {\n            // nothing is playing\n            return new Response(JSON.stringify({\n                playing: false\n            }), {\n                headers: {\n                    \"content-type\": \"application/json\"\n                }\n            });\n        }\n        if (!playingRes.ok) throw new Error(\"spotify now playing failed\");\n        const data = await playingRes.json();\n        const payload = {\n            playing: data?.is_playing ?? false,\n            progress_ms: data?.progress_ms ?? 0,\n            duration_ms: data?.item?.duration_ms ?? 0,\n            title: data?.item?.name ?? \"\",\n            artist: data?.item?.artists?.map((a)=>a.name).join(\", \") ?? \"\",\n            album: data?.item?.album?.name ?? \"\",\n            artwork: data?.item?.album?.images?.[1]?.url ?? \"\",\n            url: data?.item?.external_urls?.spotify ?? \"\"\n        };\n        return new Response(JSON.stringify(payload), {\n            headers: {\n                \"content-type\": \"application/json\",\n                // prevent caching\n                \"cache-control\": \"no-store, no-cache, must-revalidate\"\n            }\n        });\n    } catch (e) {\n        return new Response(JSON.stringify({\n            playing: false\n        }), {\n            headers: {\n                \"content-type\": \"application/json\"\n            },\n            status: 200\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvYXBpL25vdy1wbGF5aW5nL3JvdXRlLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBTyxNQUFNQSxVQUFVLE9BQU87QUFDdkIsTUFBTUMsVUFBVSxnQkFBZ0IsQ0FBRSxxQkFBcUI7QUFDdkQsTUFBTUMsYUFBYSxFQUFFO0FBRTVCLE1BQU1DLFdBQVdDLFFBQVFDLEdBQUcsQ0FBQ0MsaUJBQWlCO0FBQzlDLE1BQU1DLGVBQWVILFFBQVFDLEdBQUcsQ0FBQ0cscUJBQXFCO0FBQ3RELE1BQU1DLGVBQWVMLFFBQVFDLEdBQUcsQ0FBQ0sscUJBQXFCO0FBRXRELGVBQWVDO0lBQ2IsTUFBTUMsU0FBUyxJQUFJQyxnQkFBZ0I7UUFDakNDLFlBQVk7UUFDWkMsZUFBZU47SUFDakI7SUFFQSxNQUFNTyxNQUFNLE1BQU1DLE1BQU0sMENBQTBDO1FBQ2hFQyxRQUFRO1FBQ1JDLFNBQVM7WUFDUCxpQkFBaUIsV0FBV0MsS0FBSyxDQUFDLEVBQUVqQixTQUFTLENBQUMsRUFBRUksYUFBYSxDQUFDO1lBQzlELGdCQUFnQjtRQUNsQjtRQUNBYyxNQUFNVCxPQUFPVSxRQUFRO0lBQ3ZCO0lBRUEsSUFBSSxDQUFDTixJQUFJTyxFQUFFLEVBQUUsTUFBTSxJQUFJQyxNQUFNO0lBQzdCLE9BQU9SLElBQUlTLElBQUk7QUFDakI7QUFFTyxlQUFlQztJQUNwQixJQUFJO1FBQ0YsTUFBTSxFQUFFQyxZQUFZLEVBQUUsR0FBRyxNQUFNaEI7UUFFL0IsTUFBTWlCLGFBQWEsTUFBTVgsTUFDdkIsMERBQ0E7WUFBRUUsU0FBUztnQkFBRVUsZUFBZSxDQUFDLE9BQU8sRUFBRUYsYUFBYSxDQUFDO1lBQUM7UUFBRTtRQUd6RCxJQUFJQyxXQUFXRSxNQUFNLEtBQUssT0FBT0YsV0FBV0UsTUFBTSxLQUFLLEtBQUs7WUFDMUQscUJBQXFCO1lBQ3JCLE9BQU8sSUFBSUMsU0FBU0MsS0FBS0MsU0FBUyxDQUFDO2dCQUFFQyxTQUFTO1lBQU0sSUFBSTtnQkFDdERmLFNBQVM7b0JBQUUsZ0JBQWdCO2dCQUFtQjtZQUNoRDtRQUNGO1FBRUEsSUFBSSxDQUFDUyxXQUFXTCxFQUFFLEVBQUUsTUFBTSxJQUFJQyxNQUFNO1FBRXBDLE1BQU1XLE9BQU8sTUFBTVAsV0FBV0gsSUFBSTtRQUVsQyxNQUFNVyxVQUFVO1lBQ2RGLFNBQVNDLE1BQU1FLGNBQWM7WUFDN0JDLGFBQWFILE1BQU1HLGVBQWU7WUFDbENDLGFBQWFKLE1BQU1LLE1BQU1ELGVBQWU7WUFDeENFLE9BQU9OLE1BQU1LLE1BQU1FLFFBQVE7WUFDM0JDLFFBQVFSLE1BQU1LLE1BQU1JLFNBQVNDLElBQUksQ0FBQ0MsSUFBV0EsRUFBRUosSUFBSSxFQUFFSyxLQUFLLFNBQVM7WUFDbkVDLE9BQU9iLE1BQU1LLE1BQU1RLE9BQU9OLFFBQVE7WUFDbENPLFNBQVNkLE1BQU1LLE1BQU1RLE9BQU9FLFFBQVEsQ0FBQyxFQUFFLEVBQUVDLE9BQU87WUFDaERBLEtBQUtoQixNQUFNSyxNQUFNWSxlQUFlQyxXQUFXO1FBQzdDO1FBRUEsT0FBTyxJQUFJdEIsU0FBU0MsS0FBS0MsU0FBUyxDQUFDRyxVQUFVO1lBQzNDakIsU0FBUztnQkFDUCxnQkFBZ0I7Z0JBQ2hCLGtCQUFrQjtnQkFDbEIsaUJBQWlCO1lBQ25CO1FBQ0Y7SUFDRixFQUFFLE9BQU9tQyxHQUFHO1FBQ1YsT0FBTyxJQUFJdkIsU0FBU0MsS0FBS0MsU0FBUyxDQUFDO1lBQUVDLFNBQVM7UUFBTSxJQUFJO1lBQ3REZixTQUFTO2dCQUFFLGdCQUFnQjtZQUFtQjtZQUM5Q1csUUFBUTtRQUNWO0lBQ0Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9hcHAvYXBpL25vdy1wbGF5aW5nL3JvdXRlLnRzP2MyOWQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IHJ1bnRpbWUgPSAnZWRnZSc7IFxuZXhwb3J0IGNvbnN0IGR5bmFtaWMgPSAnZm9yY2UtZHluYW1pYyc7ICAvLyBhbHdheXMgZmV0Y2ggZnJlc2hcbmV4cG9ydCBjb25zdCByZXZhbGlkYXRlID0gMDtcblxuY29uc3QgY2xpZW50SWQgPSBwcm9jZXNzLmVudi5TUE9USUZZX0NMSUVOVF9JRCE7XG5jb25zdCBjbGllbnRTZWNyZXQgPSBwcm9jZXNzLmVudi5TUE9USUZZX0NMSUVOVF9TRUNSRVQhO1xuY29uc3QgcmVmcmVzaFRva2VuID0gcHJvY2Vzcy5lbnYuU1BPVElGWV9SRUZSRVNIX1RPS0VOITtcblxuYXN5bmMgZnVuY3Rpb24gZ2V0QWNjZXNzVG9rZW4oKSB7XG4gIGNvbnN0IHBhcmFtcyA9IG5ldyBVUkxTZWFyY2hQYXJhbXMoe1xuICAgIGdyYW50X3R5cGU6ICdyZWZyZXNoX3Rva2VuJyxcbiAgICByZWZyZXNoX3Rva2VuOiByZWZyZXNoVG9rZW4sXG4gIH0pO1xuXG4gIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKCdodHRwczovL2FjY291bnRzLnNwb3RpZnkuY29tL2FwaS90b2tlbicsIHtcbiAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICBoZWFkZXJzOiB7XG4gICAgICAnQXV0aG9yaXphdGlvbic6ICdCYXNpYyAnICsgYnRvYShgJHtjbGllbnRJZH06JHtjbGllbnRTZWNyZXR9YCksXG4gICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCcsXG4gICAgfSxcbiAgICBib2R5OiBwYXJhbXMudG9TdHJpbmcoKSxcbiAgfSk7XG5cbiAgaWYgKCFyZXMub2spIHRocm93IG5ldyBFcnJvcigndG9rZW4gcmVmcmVzaCBmYWlsZWQnKTtcbiAgcmV0dXJuIHJlcy5qc29uKCkgYXMgUHJvbWlzZTx7IGFjY2Vzc190b2tlbjogc3RyaW5nIH0+O1xufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gR0VUKCkge1xuICB0cnkge1xuICAgIGNvbnN0IHsgYWNjZXNzX3Rva2VuIH0gPSBhd2FpdCBnZXRBY2Nlc3NUb2tlbigpO1xuXG4gICAgY29uc3QgcGxheWluZ1JlcyA9IGF3YWl0IGZldGNoKFxuICAgICAgJ2h0dHBzOi8vYXBpLnNwb3RpZnkuY29tL3YxL21lL3BsYXllci9jdXJyZW50bHktcGxheWluZycsXG4gICAgICB7IGhlYWRlcnM6IHsgQXV0aG9yaXphdGlvbjogYEJlYXJlciAke2FjY2Vzc190b2tlbn1gIH0gfVxuICAgICk7XG5cbiAgICBpZiAocGxheWluZ1Jlcy5zdGF0dXMgPT09IDIwNCB8fCBwbGF5aW5nUmVzLnN0YXR1cyA9PT0gMjAyKSB7XG4gICAgICAvLyBub3RoaW5nIGlzIHBsYXlpbmdcbiAgICAgIHJldHVybiBuZXcgUmVzcG9uc2UoSlNPTi5zdHJpbmdpZnkoeyBwbGF5aW5nOiBmYWxzZSB9KSwge1xuICAgICAgICBoZWFkZXJzOiB7ICdjb250ZW50LXR5cGUnOiAnYXBwbGljYXRpb24vanNvbicgfSxcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGlmICghcGxheWluZ1Jlcy5vaykgdGhyb3cgbmV3IEVycm9yKCdzcG90aWZ5IG5vdyBwbGF5aW5nIGZhaWxlZCcpO1xuXG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IHBsYXlpbmdSZXMuanNvbigpO1xuXG4gICAgY29uc3QgcGF5bG9hZCA9IHtcbiAgICAgIHBsYXlpbmc6IGRhdGE/LmlzX3BsYXlpbmcgPz8gZmFsc2UsXG4gICAgICBwcm9ncmVzc19tczogZGF0YT8ucHJvZ3Jlc3NfbXMgPz8gMCxcbiAgICAgIGR1cmF0aW9uX21zOiBkYXRhPy5pdGVtPy5kdXJhdGlvbl9tcyA/PyAwLFxuICAgICAgdGl0bGU6IGRhdGE/Lml0ZW0/Lm5hbWUgPz8gJycsXG4gICAgICBhcnRpc3Q6IGRhdGE/Lml0ZW0/LmFydGlzdHM/Lm1hcCgoYTogYW55KSA9PiBhLm5hbWUpLmpvaW4oJywgJykgPz8gJycsXG4gICAgICBhbGJ1bTogZGF0YT8uaXRlbT8uYWxidW0/Lm5hbWUgPz8gJycsXG4gICAgICBhcnR3b3JrOiBkYXRhPy5pdGVtPy5hbGJ1bT8uaW1hZ2VzPy5bMV0/LnVybCA/PyAnJyxcbiAgICAgIHVybDogZGF0YT8uaXRlbT8uZXh0ZXJuYWxfdXJscz8uc3BvdGlmeSA/PyAnJyxcbiAgICB9O1xuXG4gICAgcmV0dXJuIG5ldyBSZXNwb25zZShKU09OLnN0cmluZ2lmeShwYXlsb2FkKSwge1xuICAgICAgaGVhZGVyczoge1xuICAgICAgICAnY29udGVudC10eXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgICAvLyBwcmV2ZW50IGNhY2hpbmdcbiAgICAgICAgJ2NhY2hlLWNvbnRyb2wnOiAnbm8tc3RvcmUsIG5vLWNhY2hlLCBtdXN0LXJldmFsaWRhdGUnLFxuICAgICAgfSxcbiAgICB9KTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHJldHVybiBuZXcgUmVzcG9uc2UoSlNPTi5zdHJpbmdpZnkoeyBwbGF5aW5nOiBmYWxzZSB9KSwge1xuICAgICAgaGVhZGVyczogeyAnY29udGVudC10eXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nIH0sXG4gICAgICBzdGF0dXM6IDIwMCxcbiAgICB9KTtcbiAgfVxufVxuIl0sIm5hbWVzIjpbInJ1bnRpbWUiLCJkeW5hbWljIiwicmV2YWxpZGF0ZSIsImNsaWVudElkIiwicHJvY2VzcyIsImVudiIsIlNQT1RJRllfQ0xJRU5UX0lEIiwiY2xpZW50U2VjcmV0IiwiU1BPVElGWV9DTElFTlRfU0VDUkVUIiwicmVmcmVzaFRva2VuIiwiU1BPVElGWV9SRUZSRVNIX1RPS0VOIiwiZ2V0QWNjZXNzVG9rZW4iLCJwYXJhbXMiLCJVUkxTZWFyY2hQYXJhbXMiLCJncmFudF90eXBlIiwicmVmcmVzaF90b2tlbiIsInJlcyIsImZldGNoIiwibWV0aG9kIiwiaGVhZGVycyIsImJ0b2EiLCJib2R5IiwidG9TdHJpbmciLCJvayIsIkVycm9yIiwianNvbiIsIkdFVCIsImFjY2Vzc190b2tlbiIsInBsYXlpbmdSZXMiLCJBdXRob3JpemF0aW9uIiwic3RhdHVzIiwiUmVzcG9uc2UiLCJKU09OIiwic3RyaW5naWZ5IiwicGxheWluZyIsImRhdGEiLCJwYXlsb2FkIiwiaXNfcGxheWluZyIsInByb2dyZXNzX21zIiwiZHVyYXRpb25fbXMiLCJpdGVtIiwidGl0bGUiLCJuYW1lIiwiYXJ0aXN0IiwiYXJ0aXN0cyIsIm1hcCIsImEiLCJqb2luIiwiYWxidW0iLCJhcnR3b3JrIiwiaW1hZ2VzIiwidXJsIiwiZXh0ZXJuYWxfdXJscyIsInNwb3RpZnkiLCJlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./app/api/now-playing/route.ts\n");

/***/ })

});