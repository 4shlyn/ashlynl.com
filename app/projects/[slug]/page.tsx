import { notFound } from 'next/navigation';

const data: Record<string, { title: string; dek: string; body: string[] }> = {
  'srad-flight-computer': {
    title: 'SRAD Flight Computer with State-Estimation EKF',
    dek: 'A custom avionics stack with EKF‑based state estimation and reliable dual‑deployment at apogee and main.',
    body: [
      'For Launch Canada 2025, The Bishop Strachan Rocketry Team endeavoured on 3 SRAD primary components: airframe, avionics, and recovery. I led the avionics team of 12 members to design and build a custom flight computer for the rocket, with the goal of having reliable dual-deployment at apogee and main.',
      'Research conducted for our flight computer consisted of both a hardware and software component.',

      'Hardware-wise, we decided to go with a Teensy 4.1 microcontroller for its high processing power (600MHz) and large community support. We also incorporated an ICM-20948 9-DOF IMU for orientation sensing, a BMP388 barometric pressure sensor for altitude estimation, and some other minor circuit components such as MOSFETs, a 2-cell LiPo battery, magnetic switches and more. See the diagram below for the schematic.',

      // KICAD SCHEMATIC DIAG

      'Given my familiarity, the software component was a relatively simpler task. After some discussion with University of Waterloos avionics team, we decided to implement a Kalman Filter for sensor fusion and state estimation. I coded an Extended Kalman Filter (EKF) to estimate the rocket’s altitude and velocity based on the IMU and barometric pressure sensor data. The EKF was tuned to handle the high dynamics of a rocket launch, ensuring accurate state estimation throughout the flight.',
    ]
  },
  'contraction-metrics': {
    title: 'Neural Stochastic Contraction Metrics at UTIAS',
    dek: 'Research internship on learning-based control theory for nonlinear stochastic systems',
    body: [
      'This past summer (of 2025), I had the pleasure of working under MSc Kevin Chen at the University of Toronto Institute of Aerospace Studies (UTIAS) through the Aerial Robotics Club.',
      'I took a keen interest in his thesis project regarding the stability analysis of a quadrotor with a slung payload, as his approach to creating a CCM fused my understanding of PID, EKFs and neural networks with the concept of contraction metrics',
      'Formally, a contraction metric is a Riemannian metric that guarantees that all system trajectories converge exponentially to each other. This is useful for stabilizing nonlinear systems (like quadrotors), as it is a global property that can be checked pointwise.',
      'Kevins thesis looked at extending CCMs to stochastic non-linear systems, and was looking at a supervised learning approach to generating contraction metrics based off of convex-optimized data of existing x and M(x) data. The process of generating such data; however, was quite taxing and involved a large amount of computing power, and much trial and error. Thus, the work I did was looking at the unguided appraoch of trying to satisfy the stochastic contraction condition (a matrix inequality) through a neural network, and seeing if it was possible to generate a contraction metric in this way.',
      'Using PyTorch, I coded an automatic differentiation to compute the necessary Jacobians to check the contraction condition for a pendulum anchored on a car to test the networks ability to work with non-linear systems. I trained the network on a stochastic pendulum system, and was able to get some promising results regarding the satisfaction of the contraction condition, as well as some interesting visualizations of the contraction metric varying over the state space.',
      'Overall, this was a very rewarding experience, and I learned a lot about both control theory and machine learning.',

      'Currently, I am extending this work to an inverted pendulum system to test more than optimization but validity (as an inverted pendulum is not inherently stable), and will be looking to code a CCM-based controller for the system using the contraction metric generated by the neural network.',


      'Here are some photos I took whilst at UTIAS!'
    ]
  },
  'blank1': {
    title: '575',
    dek: 'veggie maki roll',
    body: [
      'i found a good place to eat',
      'though the salad’s bad.'
 
    ]
  },
  'blank2': {
    title: 'Coming soon!',
    dek: '',
    body: [
      ''
    ]
  }
};

export default function ProjectArticle({ params }: { params: { slug: string } }){
  const item = data[params.slug];
  if (!item) return notFound();
  return (
        <main className="container with-nav-offset">
    <article className="article container">
      <header>
        <h1>{item.title}</h1>
        <i className="desc">{item.dek}</i>
      </header>
      <div className="content">
        {item.body.map((p, i) => <p key={i}>{p}</p>)}
      </div>
    </article>
    </main>
  );
}
